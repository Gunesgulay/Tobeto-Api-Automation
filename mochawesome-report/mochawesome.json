{
  "stats": {
    "suites": 2,
    "tests": 8,
    "passes": 6,
    "pending": 0,
    "failures": 2,
    "start": "2024-02-14T14:41:46.459Z",
    "end": "2024-02-14T14:41:47.936Z",
    "duration": 1477,
    "testsRegistered": 8,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e055c81a-20b9-4577-a2ba-184c5b49f746",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "checkForUnfulfilledExpectations.call(this);\nrecordedExpects = [];",
          "err": {},
          "uuid": "ba8b07ad-1104-481f-a522-df94974dea0f",
          "parentUUID": "e055c81a-20b9-4577-a2ba-184c5b49f746",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "d76de166-faaa-43f2-aa25-2565a0360aa0",
          "title": "Exam Module",
          "fullFile": "/Users/Tobeto-Api-Automation/tests/examTests.js",
          "file": "/tests/examTests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET - GetExam",
              "fullTitle": "Exam Module GET - GetExam",
              "timedOut": false,
              "duration": 420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const resBody = {\n    \"id\": 8,\n    \"name\": \"softwaretest\",\n    \"priority\": 1,\n    \"visibility\": true,\n    \"description\": \"firstlevel\",\n    \"numberOfQuestions\": 20,\n    \"startingTime\": \"2024-02-22T12:12:00.63\",\n    \"endingTime\": \"2024-02-22T12:13:00.63\",\n    \"isActive\": true,\n    \"duration\": 20\n}\nconst response = chakram.get(\"http://localhost:5278/api/Exams/8\");\nexpect(response).to.have.status(200);\nexpect(response).to.comprise.of.json(resBody);\nexpect(response).to.have.header('content-type', 'application/json; charset=utf-8'); \nreturn chakram.wait();",
              "err": {},
              "uuid": "99539486-8467-4662-90f1-1ba51dad160b",
              "parentUUID": "d76de166-faaa-43f2-aa25-2565a0360aa0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - DeleteExam",
              "fullTitle": "Exam Module DELETE - DeleteExam",
              "timedOut": false,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const resBody = {\n    \"id\": 8\n};\nconst response = chakram.delete(\"http://localhost:5278/api/Exams/8\");\nexpect(response).to.have.status(200);\nexpect(response).to.comprise.of.json(resBody); \nexpect(response).to.have.header('content-type', 'application/json; charset=utf-8'); \nreturn chakram.wait();",
              "err": {},
              "uuid": "451ecf39-2efc-4f1a-9b61-54fd82e5d158",
              "parentUUID": "d76de166-faaa-43f2-aa25-2565a0360aa0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - CreateExam",
              "fullTitle": "Exam Module POST - CreateExam",
              "timedOut": false,
              "duration": 247,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const resBody = {\n    \"id\": 1010,\n    \"name\": \"softwaretest\",\n    \"priority\": 1,\n    \"visibility\": true,\n    \"description\": \"firstlevel\",\n    \"numberOfQuestions\": 20,\n    \"startingTime\": \"2024-02-22T12:12:00.63Z\",\n    \"endingTime\": \"2024-02-22T12:13:00.63Z\",\n    \"isActive\": true,\n    \"duration\": 20\n};\nconst body = {\n    \"name\": \"softwaretest\",\n    \"priority\": 1,\n    \"visibility\": true,\n    \"description\": \"firstlevel\",\n    \"numberOfQuestions\": 20,\n    \"startingTime\": \"2024-02-22T12:12:00.630Z\",\n    \"endingTime\": \"2024-02-22T12:13:00.630Z\",\n    \"isActive\": true,\n    \"duration\": 20\n};\nconst response = chakram.post(\"http://localhost:5278/api/Exams\", body);\nexpect(response).to.have.status(201);\nexpect(response).to.comprise.of.json(resBody); \nexpect(response).to.have.header('content-type', 'application/json; charset=utf-8'); \nreturn chakram.wait();",
              "err": {},
              "uuid": "00e4bc30-fd94-4ee6-b064-6361288c46e9",
              "parentUUID": "d76de166-faaa-43f2-aa25-2565a0360aa0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - UpdateExam",
              "fullTitle": "Exam Module PUT - UpdateExam",
              "timedOut": false,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const resBody = {\n    \"id\": 1010,\n    \"name\": \"softwaretest\",\n    \"priority\": 1,\n    \"visibility\": true,\n    \"description\": \"secondlevel\",\n    \"numberOfQuestions\": 40,\n    \"startingTime\": \"2024-02-23T12:12:00.43Z\",\n    \"endingTime\": \"2024-02-23T12:13:00.43Z\",\n    \"isActive\": true,\n    \"duration\": 40\n};\nconst body = {\n    \"id\": 1010,\n    \"name\": \"softwaretest\",\n    \"priority\": 1,\n    \"visibility\": true,\n    \"description\": \"secondlevel\",\n    \"numberOfQuestions\": 40,\n    \"startingTime\": \"2024-02-23T12:12:00.430Z\",\n    \"endingTime\": \"2024-02-23T12:13:00.430Z\",\n    \"isActive\": true,\n    \"duration\": 40\n}\nconst response = chakram.put(\"http://localhost:5278/api/Exams\", body);\nexpect(response).to.have.status(200);\nexpect(response).to.comprise.of.json(resBody); \nexpect(response).to.have.header('content-type', 'application/json; charset=utf-8'); \nreturn chakram.wait();",
              "err": {},
              "uuid": "408d1275-7f14-4fce-ba4f-39511ffe6520",
              "parentUUID": "d76de166-faaa-43f2-aa25-2565a0360aa0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99539486-8467-4662-90f1-1ba51dad160b",
            "451ecf39-2efc-4f1a-9b61-54fd82e5d158",
            "00e4bc30-fd94-4ee6-b064-6361288c46e9",
            "408d1275-7f14-4fce-ba4f-39511ffe6520"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1083,
          "root": false,
          "rootEmpty": false,
          "_timeout": 90000
        },
        {
          "uuid": "d001f349-4a84-4d97-b6a4-3e928d487875",
          "title": "User Module",
          "fullFile": "/Users/Tobeto-Api-Automation/tests/userTests.js",
          "file": "/tests/userTests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET - GetUser",
              "fullTitle": "User Module GET - GetUser",
              "timedOut": false,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const resBody = {\n    \"id\": 2007,\n    \"firstName\": \"test\",\n    \"lastName\": \"example\",\n    \"email\": \"testexample911@gmail.com\",\n    \"status\": true\n}\nconst response = chakram.get(\"http://localhost:5278/api/Users/2007\");\nexpect(response).to.have.status(200);\nexpect(response).to.comprise.of.json(resBody);\nexpect(response).to.have.header('content-type', 'application/json; charset=utf-8'); \nreturn chakram.wait();",
              "err": {},
              "uuid": "0caea1be-dcb8-4bc3-9b0b-57285b52da96",
              "parentUUID": "d001f349-4a84-4d97-b6a4-3e928d487875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - DeleteUser",
              "fullTitle": "User Module DELETE - DeleteUser",
              "timedOut": false,
              "duration": 22,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const resBody = {\n    \"id\": 2007\n};\nconst response = chakram.delete(\"http://localhost:5278/api/Users\");\nexpect(response).to.have.status(200);\nexpect(response).to.comprise.of.json(resBody); \nexpect(response).to.have.header('content-type', 'application/json; charset=utf-8'); \nreturn chakram.wait();",
              "err": {
                "message": "AssertionError: expected status code 415 to equal 200",
                "estack": "AssertionError: expected status code 415 to equal 200",
                "diff": null
              },
              "uuid": "ebe22264-275b-4a54-9802-c52d1820c682",
              "parentUUID": "d001f349-4a84-4d97-b6a4-3e928d487875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - CreateUser",
              "fullTitle": "User Module POST - CreateUser",
              "timedOut": false,
              "duration": 221,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const resBody = {\n    \"id\": 2013,\n    \"firstName\": \"test\",\n    \"lastName\": \"example\",\n    \"email\": \"testexample944@gmail.com\",\n    \"status\": true\n};\nconst body = {\n    \"firstName\": \"test\",\n    \"lastName\": \"example\",\n    \"email\": \"testexample944@gmail.com\",\n    \"password\": \"1111\"\n};\nconst response = chakram.post(\"http://localhost:5278/api/Users\", body);\nexpect(response).to.have.status(201);\nexpect(response).to.comprise.of.json(resBody); \nexpect(response).to.have.header('content-type', 'application/json; charset=utf-8'); \nreturn chakram.wait();",
              "err": {},
              "uuid": "91641c9f-e3e4-4937-b760-c40a92833034",
              "parentUUID": "d001f349-4a84-4d97-b6a4-3e928d487875",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - UpdateUser",
              "fullTitle": "User Module PUT - UpdateUser",
              "timedOut": false,
              "duration": 70,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const resBody = {\n    \"id\": 1013,\n    \"firstName\": \"test12\",\n    \"lastName\": \"example\",\n    \"email\": \"tobeto55@hotmail.com\",\n    \"status\": true\n};\nconst body = {\n    \"id\": 1013,\n    \"firstName\": \"test12\",\n    \"lastName\": \"example\",\n    \"email\": \"tobeto55@hotmail.com\",\n    \"password\": \"6666\"\n}\nconst response = chakram.put(\"http://localhost:5278/api/Users\", body);\nexpect(response).to.have.status(200);\nexpect(response).to.comprise.of.json(resBody); \nexpect(response).to.have.header('content-type', 'application/json; charset=utf-8'); \nreturn chakram.wait();",
              "err": {
                "message": "AssertionError: expected status code 500 to equal 200",
                "estack": "AssertionError: expected status code 500 to equal 200",
                "diff": null
              },
              "uuid": "0328c86a-cfb8-44dd-a6d5-747ac80e70be",
              "parentUUID": "d001f349-4a84-4d97-b6a4-3e928d487875",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0caea1be-dcb8-4bc3-9b0b-57285b52da96",
            "91641c9f-e3e4-4937-b760-c40a92833034"
          ],
          "failures": [
            "ebe22264-275b-4a54-9802-c52d1820c682",
            "0328c86a-cfb8-44dd-a6d5-747ac80e70be"
          ],
          "pending": [],
          "skipped": [],
          "duration": 381,
          "root": false,
          "rootEmpty": false,
          "_timeout": 90000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 90000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}